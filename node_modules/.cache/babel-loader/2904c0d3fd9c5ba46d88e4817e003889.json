{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js\";\n// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport moment from \"moment\";\nimport { useTranslation } from 'react-i18next';\nimport ReactGA from 'react-ga';\nimport * as firebase from \"firebase/app\"; // Components\n\nimport './app.css';\nimport Header from \"./Header\";\nimport DaysPanel from \"./DaysPanel\";\nimport CategoryPanel from \"./CategoryPanel\";\nimport FeedPanel from './FeedPanel';\nimport Loading from \"./Loading\";\n\nfunction App() {\n  // Google Analytics\n  ReactGA.initialize('UA-162926417-1');\n  ReactGA.pageview(\"/app\"); // Translation\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    i18n.changeLanguage(lang);\n  };\n\n  const [feedItems, setFeedItems] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [filteredFeedItems, setFilteredFeedItems] = useState(null);\n  const [isFetchedData, setIsFetchedData] = useState(false);\n  const [autoComleteFeed, setAutoComleteFeed] = useState([]);\n  const [daySelected, setDaySelected] = useState(moment().format('YYYY-MM-DD'));\n  const [catSelected, setCatSelected] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [language, setLanguage] = useState(\"en\");\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    savedItems: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    const authListener = firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"yes user:\", user);\n        setIsLoggedIn(true);\n        setUserData(prevState => ({ ...prevState,\n          displayName: user.displayName,\n          savedItems: user.photoURL,\n          email: user.email\n        }));\n        console.log(userData);\n      } else {\n        console.log(\"no user:\", user);\n        setIsLoggedIn(false);\n      }\n    });\n    return authListener;\n  }, []);\n  window.baseUrl = \"https://stream-hub.net/api/\"; // window.baseUrl=\"https://localhost:44339/api\";\n\n  window.allowPostWithoutLogin = true;\n\n  const fetchItems = async () => {\n    const apiCall = await fetch(`${window.baseUrl}items/`);\n    const items = await apiCall.json();\n    setAutoComleteFeed(items);\n    setFeedItems(items);\n    setFilteredFeedItems(items);\n    setIsLoading(false);\n    setLanguage(i18n.language);\n  };\n\n  useEffect(() => {\n    if (!isFetchedData) {\n      setIsFetchedData(true);\n      fetchItems(); //fetchCategories()\n    }\n  });\n  if (isLoading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    style: language === \"he\" ? {\n      direction: \"rtl\"\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    autoComleteFeed: autoComleteFeed,\n    language: language,\n    changeLanguage: changeLanguage,\n    setSearchFilter: setSearchFilter,\n    searchFilter: searchFilter,\n    setIsLoggedIn: setIsLoggedIn,\n    isLoggedIn: isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-categories-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CategoryPanel, {\n    categories: categories,\n    cat: setCatSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-days-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DaysPanel, {\n    dayChange: setDaySelected,\n    day: setDaySelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-feed-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeedPanel, {\n    feeds: feedItems,\n    dayFilter: daySelected,\n    catFilter: catSelected,\n    searchFilter: searchFilter,\n    isLoggedIn: isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js"],"names":["React","useState","useEffect","useRef","createRef","moment","useTranslation","ReactGA","firebase","Header","DaysPanel","CategoryPanel","FeedPanel","Loading","App","initialize","pageview","t","i18n","changeLanguage","lang","setLanguage","feedItems","setFeedItems","categories","setCategories","filteredFeedItems","setFilteredFeedItems","isFetchedData","setIsFetchedData","autoComleteFeed","setAutoComleteFeed","daySelected","setDaySelected","format","catSelected","setCatSelected","isLoading","setIsLoading","language","searchFilter","setSearchFilter","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","userData","setUserData","displayName","savedItems","email","authListener","auth","onAuthStateChanged","user","console","log","prevState","photoURL","window","baseUrl","allowPostWithoutLogin","fetchItems","apiCall","fetch","items","json","direction"],"mappings":"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","sourcesContent":["// Deps\nimport React,{ useState, useEffect, useRef, createRef } from 'react'\nimport moment from \"moment\"\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport * as firebase from \"firebase/app\";\n\n\n// Components\nimport './app.css'\nimport Header from \"./Header\"\nimport DaysPanel from \"./DaysPanel\"\nimport CategoryPanel from \"./CategoryPanel\"\nimport FeedPanel from './FeedPanel'\nimport Loading from \"./Loading\"\n\nfunction App() {\n\n  // Google Analytics\n  ReactGA.initialize('UA-162926417-1')\n  ReactGA.pageview(\"/app\")\n\n  // Translation\n  const { t, i18n } = useTranslation()\n\n  const changeLanguage = lang => {\n    setLanguage(lang)\n    i18n.changeLanguage(lang)\n  }\n  \n  const [feedItems, setFeedItems] = useState(null)\n  const [categories, setCategories] = useState(null)\n  const [filteredFeedItems, setFilteredFeedItems] = useState(null)\n  const [isFetchedData,setIsFetchedData]= useState(false)\n  const [autoComleteFeed,setAutoComleteFeed]= useState([])\n  const [daySelected, setDaySelected] = useState(moment().format('YYYY-MM-DD'))\n  const [catSelected, setCatSelected] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [language, setLanguage] = useState(\"en\")\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [currentUser, setCurrentUser] = useState(null)\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    savedItems: \"\",\n    email: \"\",\n  })\n\n  useEffect(() => {\n    const authListener = firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        console.log(\"yes user:\",user)\n        setIsLoggedIn(true)\n        setUserData(prevState => ({\n          ...prevState, \n          displayName: user.displayName,\n          savedItems: user.photoURL,\n          email: user.email\n        }))\n        console.log(userData)\n      } else {\n        console.log(\"no user:\",user)\n        setIsLoggedIn(false)\n      }\n    })\n    return authListener\n  }, [])\n\n  window.baseUrl=\"https://stream-hub.net/api/\";\n // window.baseUrl=\"https://localhost:44339/api\";\n  window.allowPostWithoutLogin=true;\n  const fetchItems = async () => {\n    const apiCall = await fetch(`${ window.baseUrl}items/`);\n    const items = await apiCall.json()\n    setAutoComleteFeed(items)\n    setFeedItems(items)\n    setFilteredFeedItems(items)\n    setIsLoading(false)\n    setLanguage(i18n.language)\n  }\n  \n  useEffect(() => {\n    if (!isFetchedData){\n      setIsFetchedData(true)\n      fetchItems()\n      //fetchCategories()\n    }\n  })\n\n  if (isLoading) return (<Loading />)\n  return (\n\n    <div className=\"app\" style={language === \"he\" ? {direction: \"rtl\"} : null}>\n      \n      <div className=\"app-header-container\">\n        <Header \n        autoComleteFeed={autoComleteFeed} \n        language={language} \n        changeLanguage={changeLanguage} \n        setSearchFilter={setSearchFilter}\n        searchFilter={searchFilter}\n        setIsLoggedIn={setIsLoggedIn}\n        isLoggedIn={isLoggedIn}\n        />\n      </div>\n      <div className=\"app-categories-container\">\n        <CategoryPanel \n        categories={categories} \n        cat={setCatSelected}\n        />\n      </div>\n      <div className=\"app-days-container\">\n        <DaysPanel \n        dayChange={setDaySelected} \n        day={setDaySelected}\n        />\n      </div>\n      <div className=\"app-feed-container\">\n        <FeedPanel \n        feeds={feedItems} \n        dayFilter={daySelected} \n        catFilter={catSelected} \n        searchFilter={searchFilter}\n        isLoggedIn={isLoggedIn}\n        />\n      </div>\n    </div>\n\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}