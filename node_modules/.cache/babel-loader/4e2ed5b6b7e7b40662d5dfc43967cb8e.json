{"ast":null,"code":"import _slicedToArray from\"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// Deps\nimport React,{useState,useEffect,useRef,createRef}from'react';import{useTranslation}from'react-i18next';import'./header.css';// Components\nimport LangSelector from\"./LangSelector\";import streamHubLogo from\"./StreamHub_Logo.png\";import Search from\"./Search\";import AddEventModal from\"./AddEventModal\";function Header(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddEvent=_useState2[0],setShowAddEvent=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showLogin=_useState4[0],setShowLogin=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var handleLogoClick=function handleLogoClick(){window.location.reload();};var handleShowAddEvent=function handleShowAddEvent(){setShowAddEvent(true);};var handleHideAddEvent=function handleHideAddEvent(){setShowAddEvent(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"header-container\"},/*#__PURE__*/React.createElement(\"img\",{className:\"header-logo\",src:streamHubLogo,alt:\"StreamHub Logo\",onClick:handleLogoClick}),/*#__PURE__*/React.createElement(Search,{setSearchFilter:props.setSearchFilter,searchFilter:props.searchFilter}),/*#__PURE__*/React.createElement(\"div\",{className:\"right-header-container\"},/*#__PURE__*/React.createElement(LangSelector,{language:props.language,changeLanguage:props.changeLanguage}),/*#__PURE__*/React.createElement(\"button\",{className:\"header-add-event-button\",onClick:handleShowAddEvent},\"+ \",t(\"Add Event\"))),showAddEvent?/*#__PURE__*/React.createElement(AddEventModal,{handleHideAddEvent:handleHideAddEvent}):null);}export default Header;/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js"],"names":["React","useState","useEffect","useRef","createRef","useTranslation","LangSelector","streamHubLogo","Search","AddEventModal","Header","props","showAddEvent","setShowAddEvent","showLogin","setShowLogin","t","handleLogoClick","window","location","reload","handleShowAddEvent","handleHideAddEvent","setSearchFilter","searchFilter","language","changeLanguage"],"mappings":"wMAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,SAA7C,KAA8D,OAA9D,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,cAAP,CAEA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAGA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAsB,eAEsBV,QAAQ,CAAC,KAAD,CAF9B,wCAEXW,YAFW,eAEGC,eAFH,8BAGgBZ,QAAQ,CAAC,KAAD,CAHxB,yCAGXa,SAHW,eAGAC,YAHA,mCAKJV,cAAc,EALV,CAKVW,CALU,iBAKVA,CALU,CAOlB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BR,eAAe,CAAC,IAAD,CAAf,CACH,CAFD,CAIA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BT,eAAe,CAAC,KAAD,CAAf,CACH,CAFD,CAIA,mBACI,2BAAK,SAAS,CAAC,kBAAf,eAEI,2BACI,SAAS,CAAC,aADd,CAEI,GAAG,CAAEN,aAFT,CAGI,GAAG,CAAC,gBAHR,CAII,OAAO,CAAEU,eAJb,EAFJ,cASI,oBAAC,MAAD,EACI,eAAe,CAAEN,KAAK,CAACY,eAD3B,CAEI,YAAY,CAAEZ,KAAK,CAACa,YAFxB,EATJ,cAaI,2BAAK,SAAS,CAAC,wBAAf,eACI,oBAAC,YAAD,EACI,QAAQ,CAAEb,KAAK,CAACc,QADpB,CAEI,cAAc,CAAEd,KAAK,CAACe,cAF1B,EADJ,cAMI,8BACI,SAAS,CAAC,yBADd,CAEI,OAAO,CAAEL,kBAFb,OAGOL,CAAC,CAAC,WAAD,CAHR,CANJ,CAbJ,CA0BKJ,YAAY,cAAG,oBAAC,aAAD,EAAe,kBAAkB,CAAEU,kBAAnC,EAAH,CAA8D,IA1B/E,CADJ,CA+BH,CAED,cAAeZ,CAAAA,MAAf,CAGA","sourcesContent":["// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react'\nimport { useTranslation } from 'react-i18next' \nimport './header.css'\n\n// Components\nimport LangSelector from \"./LangSelector\"\nimport streamHubLogo from \"./StreamHub_Logo.png\"\nimport Search from \"./Search\"\nimport AddEventModal from \"./AddEventModal\"\n\n\nfunction Header(props){\n\n    const [showAddEvent, setShowAddEvent] = useState(false)\n    const [showLogin, setShowLogin] = useState(false)\n    \n    const { t } = useTranslation()\n\n    const handleLogoClick = () => {\n        window.location.reload()\n    }\n\n    const handleShowAddEvent = () => {\n        setShowAddEvent(true)\n    }\n\n    const handleHideAddEvent = () => {\n        setShowAddEvent(false)\n    }\n\n    return (\n        <div className=\"header-container\">\n\n            <img \n                className=\"header-logo\" \n                src={streamHubLogo} \n                alt=\"StreamHub Logo\"  \n                onClick={handleLogoClick}\n            />\n\n            <Search \n                setSearchFilter={props.setSearchFilter}\n                searchFilter={props.searchFilter}\n            />\n            <div className=\"right-header-container\">\n                <LangSelector \n                    language={props.language} \n                    changeLanguage={props.changeLanguage}\n                />\n\n                <button \n                    className=\"header-add-event-button\" \n                    onClick={handleShowAddEvent}>\n                    + {t(\"Add Event\")}\n                </button>\n            </div>\n            \n            {showAddEvent ? <AddEventModal handleHideAddEvent={handleHideAddEvent}/> : null}\n            \n        </div>\n    )\n}\n\nexport default Header;\n\n\n/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */\n"]},"metadata":{},"sourceType":"module"}