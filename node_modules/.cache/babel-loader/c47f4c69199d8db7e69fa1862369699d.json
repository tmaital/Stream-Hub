{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './header.css';\nimport AddFeedItem from './add-feed-item';\nimport SocialLoginDialog from './Social-login-dialog';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Logo from './Logo';\nimport LangSelector from \"./LangSelector\";\nimport streamHubLogo from \"./StreamHub_Logo.png\";\nimport { getSocialUser, setSocialUser } from '../Services/localStorageService';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nfunction Header() {\n  const [isAddFeedOpen, setAddFeedOpen] = React.useState(false);\n  const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\n  const [autoComleteFeed, setAutoComleteFeed] = React.useState([]);\n  const {\n    t\n  } = useTranslation();\n\n  const openLoginDialog = () => {\n    console.log('openLoginDialog');\n    setLoginDialogOpen(true);\n  };\n\n  const handleLoginDialogClose = () => {\n    setLoginDialogOpen(false);\n    setAddFeedOpen(false);\n  };\n\n  const handleLogoClick = () => {\n    window.location.reload();\n  };\n\n  let defaultProps = {\n    options: autoComleteFeed,\n    getOptionLabel: option => option.itemTitle\n  };\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    } //setAddFeedOpen(false);\n    //setLoginDialogOpen(false);\n\n  };\n\n  const doLogout = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: streamHubLogo,\n    alt: \"StreamHub Logo\",\n    style: {\n      display: \"flex\",\n      width: 240,\n      cursor: \"pointer\",\n      objectFit: \"contain\"\n    },\n    onClick: handleLogoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LangSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, true &&\n  /*#__PURE__*/\n\n  /*autoComleteFeed.length>0*/\n  React.createElement(Autocomplete, Object.assign({\n    className: \"app-autocomple\",\n    style: {\n      width: 300,\n      height: 60\n    }\n  }, defaultProps, {\n    id: \"auto-complete\",\n    autoComplete: true,\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"search\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 38\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 52\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"auto\",\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 30\n    },\n    variant: \"contained\",\n    onClick: () => {\n      console.log('setAddFeedOpen');\n      setAddFeedOpen(true);\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, t(\"Add Event\"))), true\n  /*!getSocialUser()*/\n  &&\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    style: {\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 30,\n      marginLeft: \"auto\"\n    },\n    variant: \"contained\",\n    onClick: () => {\n      console.log('setAddFeedOpen');\n      setLoginDialogOpen(true);\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, t(\"Login\"))), false\n  /*getSocialUser()*/\n  &&\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    style: {\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 30,\n      marginLeft: \"auto\"\n    },\n    variant: \"outlined\",\n    onClick: () => {\n      console.log('setAddFeedOpen');\n      childSocialLoginRef.current.doLogout();\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-feed-item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddFeedItem, {\n    openLoginDialog: openLoginDialog,\n    openAddFeedDialog: isAddFeedOpen,\n    handleAddFeedClose: () => setAddFeedOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SocialLoginDialog, {\n    open: isLoginDialogOpen,\n    onClose: handleLoginDialogClose,\n    ref: childSocialLoginRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js"],"names":["React","Component","useTranslation","AddFeedItem","SocialLoginDialog","Drawer","makeStyles","Button","TextField","Autocomplete","Logo","LangSelector","streamHubLogo","getSocialUser","setSocialUser","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Header","isAddFeedOpen","setAddFeedOpen","useState","isLoginDialogOpen","setLoginDialogOpen","autoComleteFeed","setAutoComleteFeed","t","openLoginDialog","console","log","handleLoginDialogClose","handleLogoClick","window","location","reload","defaultProps","options","getOptionLabel","option","itemTitle","toggleDrawer","anchor","open","event","type","key","doLogout","display","width","cursor","objectFit","height","params","marginLeft","marginRight","marginTop","childSocialLoginRef","current"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './header.css';\n\nimport AddFeedItem from './add-feed-item';\nimport SocialLoginDialog from './Social-login-dialog';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport  Logo from './Logo';\nimport LangSelector from \"./LangSelector\"\nimport streamHubLogo from \"./StreamHub_Logo.png\"\nimport {getSocialUser,setSocialUser} from '../Services/localStorageService'\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nfunction Header(){\n\n    const [isAddFeedOpen, setAddFeedOpen] = React.useState(false);\n    const [isLoginDialogOpen, setLoginDialogOpen] = React.useState(false);\n    const [autoComleteFeed,setAutoComleteFeed]= React.useState([]);\n    \n    const { t } = useTranslation()\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n\n    const handleLogoClick = () => {\n        window.location.reload()\n    }\n\n    let  defaultProps = {\n        options: autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n    \n    const doLogout = () => {\n    }\n\n\n\n\n\n    return (\n        <div className=\"header-container\">\n            <img src={streamHubLogo} alt=\"StreamHub Logo\" style={{display: \"flex\", width:240, cursor: \"pointer\", objectFit: \"contain\"}} onClick={handleLogoClick}/>\n            <LangSelector />\n\n            <div  style={{display: \"flex\"}}>\n            { true && /*autoComleteFeed.length>0*/ <Autocomplete className=\"app-autocomple\" style={{width:300,height:60}}\n            {...defaultProps}\n            id=\"auto-complete\"\n            autoComplete\n            includeInputInList\n            renderInput={(params) => <TextField {...params} label=\"search\" margin=\"normal\" />}\n            />}\n            {/*<input \n            name=\"searchInput\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            className=\"header-search\"/>*/}\n            </div>\n\n            <div style={{marginLeft:\"auto\",marginRight:30}}>\n            <Button style={{marginTop:30}} variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n            </div>\n            {true /*!getSocialUser()*/ &&\n            <div  style={{marginRight:30}}>\n            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n            </div>\n            }\n            { false/*getSocialUser()*/ &&\n            <div  style={{marginRight:30}}>\n            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n            </div>\n            }\n            <div className=\"add-video-container\">\n            </div>\n            <div className=\"add-feed-item-container\">\n            {/*<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>*/}\n            <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n            </div>\n            <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/>\n\n        </div>\n    )\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}