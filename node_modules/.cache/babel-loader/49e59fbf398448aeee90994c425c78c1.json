{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport \"./lang-selector.css\";\n\nfunction LangSelector(props) {\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState(false);\n  useEffect(() => {\n    if (props.language === \"en\") {\n      setCurrentLanguage(\"English\");\n    } else if (props.language === \"he\") {\n      setCurrentLanguage(\"Hebrew\");\n    }\n  });\n  useEffect(() => {\n    if (showMenu) {\n      document.addEventListener('click', handleCloseMenu);\n    }\n  });\n\n  const handleShowMenu = () => {\n    setShowMenu(true);\n  };\n\n  const handleCloseMenu = () => {\n    setShowMenu(false);\n    document.removeEventListener('click', handleCloseMenu);\n  };\n\n  const handleLangChange = lang => {\n    props.changeLanguage(lang);\n    setShowMenu(false);\n    document.removeEventListener('click', handleCloseMenu);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lang-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"lang-dropdown-button\",\n    onClick: handleShowMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, currentLanguage), showMenu ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lang-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, currentLanguage === \"Hebrew\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"lang-dropdown-menu-button\",\n    onClick: () => handleLangChange(\"en\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 53\n    }\n  }, \"English\") : null, currentLanguage === \"English\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"lang-dropdown-menu-button\",\n    onClick: () => handleLangChange(\"he\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 54\n    }\n  }, \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\") : null) : null));\n}\n\nexport default LangSelector;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faLanguage","LangSelector","props","showMenu","setShowMenu","currentLanguage","setCurrentLanguage","language","document","addEventListener","handleCloseMenu","handleShowMenu","removeEventListener","handleLangChange","lang","changeLanguage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAO,qBAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAK,CAACK,QAAN,KAAmB,IAAtB,EAA2B;AACvBD,MAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACH,KAFD,MAEO,IAAGJ,KAAK,CAACK,QAAN,KAAmB,IAAtB,EAA2B;AAC9BD,MAAAA,kBAAkB,CAAC,QAAD,CAAlB;AACH;AACJ,GANQ,CAAT;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,QAAH,EAAY;AACRK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,eAAnC;AACH;AACJ,GAJQ,CAAT;;AAMA,QAAMC,cAAc,GAAG,MAAM;AACzBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMM,eAAe,GAAG,MAAM;AAC1BN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsCF,eAAtC;AACH,GAHD;;AAKA,QAAMG,gBAAgB,GAAIC,IAAD,IAAU;AAC/BZ,IAAAA,KAAK,CAACa,cAAN,CAAqBD,IAArB;AACAV,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsCF,eAAtC;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,sBADV;AAEA,IAAA,OAAO,EAAEC,cAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKN,eAHL,CADJ,EAMKF,QAAQ,gBACT;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,eAAe,KAAK,QAApB,gBAA+B;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMQ,gBAAgB,CAAC,IAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA/B,GAAuI,IAD5I,EAEKR,eAAe,KAAK,SAApB,gBAAgC;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMQ,gBAAgB,CAAC,IAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAhC,GAAsI,IAF3I,CADS,GAIA,IAVb,CAFJ,CADJ;AAiBH;;AAED,eAAeZ,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons'\nimport \"./lang-selector.css\"\n\nfunction LangSelector(props){\n\n    const [showMenu, setShowMenu] = useState(false)\n    const [currentLanguage, setCurrentLanguage] = useState(false)\n\n    useEffect(() => {\n        if(props.language === \"en\"){\n            setCurrentLanguage(\"English\")\n        } else if(props.language === \"he\"){\n            setCurrentLanguage(\"Hebrew\")\n        }\n    })\n\n    useEffect(() => {\n        if(showMenu){\n            document.addEventListener('click', handleCloseMenu)\n        }\n    })\n\n    const handleShowMenu = () => {\n        setShowMenu(true)\n    }\n\n    const handleCloseMenu = () => {\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    const handleLangChange = (lang) => {\n        props.changeLanguage(lang)\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    return(\n        <div className=\"lang-dropdown\">\n            {/* <FontAwesomeIcon className=\"lang-dropdown-icon\" icon={faLanguage} size=\"2x\" color=\"#e0e0e0\" /> */}\n            <div>\n                <button \n                className=\"lang-dropdown-button\" \n                onClick={handleShowMenu}>\n                    {currentLanguage}\n                </button>\n                {showMenu ? \n                <div className=\"lang-dropdown-menu\">\n                    {currentLanguage === \"Hebrew\" ? <button className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"en\")}>English</button> : null}\n                    {currentLanguage === \"English\" ? <button className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"he\")}>עברית</button> : null}\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default LangSelector"]},"metadata":{},"sourceType":"module"}