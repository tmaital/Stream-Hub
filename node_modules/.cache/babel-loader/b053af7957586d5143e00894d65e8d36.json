{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js\";\n// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './header.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faInfoCircle, faBars } from '@fortawesome/free-solid-svg-icons'; // Components\n\nimport LangSelector from \"./LangSelector\";\nimport streamHubLogo from \"../StreamHub_Logo.png\";\nimport Search from \"./Search\";\nimport AddEventModal from \"./AddEventModal\";\nimport LoginModal from \"./LoginModal\";\nimport UserProfile from \"./UserProfile\";\nimport MobileMenu from \"./MobileMenu\";\n\nfunction Header(props) {\n  const [showAddEvent, setShowAddEvent] = useState(false);\n  const [showMustLogin, setShowMustLogin] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showProfile, SetShowProfile] = useState(false);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const handleLogoClick = () => {\n    window.location.reload();\n  };\n\n  const handleShowAddEvent = () => {\n    if (props.isLoggedIn) {\n      setShowAddEvent(true);\n      setShowMobileMenu(false);\n    } else {\n      setShowMustLogin(true);\n      setTimeout(() => {\n        setShowMustLogin(false);\n      }, 2000);\n    }\n  };\n\n  const handleHideAddEvent = () => {\n    setShowAddEvent(false);\n  };\n\n  const handleShowLogin = () => {\n    setShowLogin(true);\n  };\n\n  const handleHideMobileMenu = () => {\n    setShowMobileMenu(false);\n  };\n\n  const handleShowMobileMenu = () => {\n    setShowMobileMenu(true);\n  };\n\n  const handleHideLogin = () => {\n    setShowLogin(false);\n  };\n\n  const handleShowProfile = () => {\n    showProfile ? SetShowProfile(false) : SetShowProfile(true);\n    console.log(\"userData:\", props.userData);\n    console.log(\"feedItems:\", props.feedItems);\n  };\n\n  const handleHideProfile = () => {\n    SetShowProfile(false);\n  };\n\n  const savedCount = props.userData.savedItems && props.userData.savedItems.split(',').length;\n  const loginButton = !props.isLoggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-login-button\",\n    onClick: handleShowLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, t(\"Login\")) : null;\n  const profileNotification = props.isLoggedIn ? props.userData.savedItems ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-profile-button-notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 81\n    }\n  }, savedCount) : null : null;\n  const profileButton = props.isLoggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-profile-button\",\n    onClick: handleShowProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 49\n    }\n  })) : null;\n  const userProfile = props.isLoggedIn && showProfile ? /*#__PURE__*/React.createElement(UserProfile, {\n    handleHideProfile: handleHideProfile,\n    showProfile: showProfile,\n    setIsLoggedIn: props.setIsLoggedIn,\n    setUserData: props.setUserData,\n    userData: props.userData,\n    feedItems: props.feedItems,\n    isLoggedIn: props.isLoggedIn,\n    setUserData: props.setUserData,\n    userData: props.userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 61\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"header-hamburger-menu\",\n    icon: faBars,\n    size: \"4x\",\n    onClick: handleShowMobileMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"header-logo\",\n    src: streamHubLogo,\n    alt: \"StreamHub Logo\",\n    onClick: handleLogoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-user-container-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, loginButton, profileNotification, profileButton, userProfile)), /*#__PURE__*/React.createElement(Search, {\n    setSearchTerm: props.setSearchTerm,\n    searchTerm: props.searchTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LangSelector, {\n    language: props.language,\n    changeLanguage: props.changeLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-add-event-button\",\n    onClick: handleShowAddEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"+ \", t(\"Add Event\")), showMustLogin ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-event-dropdown-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faInfoCircle,\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, t(\"Login Required!\"))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-user-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, loginButton, profileNotification, profileButton, userProfile)), showMobileMenu ? /*#__PURE__*/React.createElement(MobileMenu, {\n    handleHideMobileMenu: handleHideMobileMenu,\n    showMustLogin: showMustLogin,\n    handleShowAddEvent: handleShowAddEvent,\n    language: props.language,\n    changeLanguage: props.changeLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 31\n    }\n  }) : null, showAddEvent ? /*#__PURE__*/React.createElement(AddEventModal, {\n    handleHideAddEvent: handleHideAddEvent,\n    userData: props.userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }) : null, showLogin ? /*#__PURE__*/React.createElement(LoginModal, {\n    handleHideLogin: handleHideLogin,\n    setIsLoggedIn: props.setIsLoggedIn,\n    isLoggedIn: props.isLoggedIn,\n    setUserData: props.setUserData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 26\n    }\n  }) : null);\n}\n\nexport default Header;\n/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js"],"names":["React","useState","useEffect","useRef","createRef","useTranslation","FontAwesomeIcon","faUser","faInfoCircle","faBars","LangSelector","streamHubLogo","Search","AddEventModal","LoginModal","UserProfile","MobileMenu","Header","props","showAddEvent","setShowAddEvent","showMustLogin","setShowMustLogin","showLogin","setShowLogin","showProfile","SetShowProfile","showMobileMenu","setShowMobileMenu","t","handleLogoClick","window","location","reload","handleShowAddEvent","isLoggedIn","setTimeout","handleHideAddEvent","handleShowLogin","handleHideMobileMenu","handleShowMobileMenu","handleHideLogin","handleShowProfile","console","log","userData","feedItems","handleHideProfile","savedCount","savedItems","split","length","loginButton","profileNotification","profileButton","userProfile","setIsLoggedIn","setUserData","setSearchTerm","searchTerm","language","changeLanguage","position"],"mappings":"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","sourcesContent":["// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react'\nimport { useTranslation } from 'react-i18next' \nimport './header.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faInfoCircle, faBars } from '@fortawesome/free-solid-svg-icons'\n\n// Components\nimport LangSelector from \"./LangSelector\"\nimport streamHubLogo from \"../StreamHub_Logo.png\"\nimport Search from \"./Search\"\nimport AddEventModal from \"./AddEventModal\"\nimport LoginModal from \"./LoginModal\"\nimport UserProfile from \"./UserProfile\"\nimport MobileMenu from \"./MobileMenu\"\n\n\nfunction Header(props){\n\n    const [showAddEvent, setShowAddEvent] = useState(false)\n    const [showMustLogin, setShowMustLogin] = useState(false)\n    const [showLogin, setShowLogin] = useState(false)\n    const [showProfile, SetShowProfile] = useState(false)\n    const [showMobileMenu, setShowMobileMenu] = useState(false)\n    \n    const { t } = useTranslation()\n\n    const handleLogoClick = () => {\n        window.location.reload()\n    }\n\n    const handleShowAddEvent = () => {\n        if(props.isLoggedIn){\n            setShowAddEvent(true)\n            setShowMobileMenu(false)\n        } else {\n            setShowMustLogin(true)\n            setTimeout(() => {setShowMustLogin(false)\n            }, 2000)\n        }\n    }\n\n    const handleHideAddEvent = () => {\n        setShowAddEvent(false)\n    }\n\n    const handleShowLogin = () => {\n        setShowLogin(true)\n    }\n\n    const handleHideMobileMenu = () => {\n        setShowMobileMenu(false)\n    }\n    \n    const handleShowMobileMenu = () => {\n        setShowMobileMenu(true)\n    }\n\n    const handleHideLogin = () => {\n        setShowLogin(false)\n    }\n    const handleShowProfile = () => {\n        showProfile ? SetShowProfile(false) : SetShowProfile(true)\n        console.log(\"userData:\",props.userData)\n        console.log(\"feedItems:\",props.feedItems)\n    }\n\n    const handleHideProfile = () => {\n        SetShowProfile(false)\n    }\n\n    const savedCount = props.userData.savedItems && props.userData.savedItems.split(',').length\n\n    const loginButton = !props.isLoggedIn ? <button \n                                            className=\"header-login-button\" \n                                            onClick={handleShowLogin}>\n                                                {t(\"Login\")}\n                                            </button> : null\n    const profileNotification = props.isLoggedIn ? (props.userData.savedItems ? <div \n                                                            className=\"header-profile-button-notifications\">\n                                                                {savedCount}\n                                                            </div> : null) : null\n    const profileButton = props.isLoggedIn ? <button \n                                            className=\"header-profile-button\" \n                                            onClick={handleShowProfile}>\n                                                <FontAwesomeIcon icon={faUser} size=\"lg\"/>\n                                            </button> : null                                  \n    \n    const userProfile = props.isLoggedIn && showProfile ?   <UserProfile \n                                        handleHideProfile={handleHideProfile}\n                                        showProfile={showProfile}\n                                        setIsLoggedIn={props.setIsLoggedIn}\n                                        setUserData={props.setUserData}\n                                        userData={props.userData}\n                                        feedItems={props.feedItems}\n                                        isLoggedIn={props.isLoggedIn}\n                                        setUserData={props.setUserData}\n                                        userData={props.userData}\n                                        /> : null\n    \n    return (\n        <div className=\"header-container\">\n            <div className=\"header-logo-container\">\n                <FontAwesomeIcon className=\"header-hamburger-menu\" icon={faBars} size=\"4x\" onClick={handleShowMobileMenu}/>\n                <img \n                    className=\"header-logo\" \n                    src={streamHubLogo} \n                    alt=\"StreamHub Logo\"  \n                    onClick={handleLogoClick}\n                />\n                <div className=\"header-user-container-mobile\">\n                    {loginButton}\n                    {profileNotification}\n                    {profileButton}\n                    {userProfile}\n                </div>  \n            </div>\n\n            <Search \n                setSearchTerm={props.setSearchTerm}\n                searchTerm={props.searchTerm}\n            />\n            <div className=\"right-header-container\">\n                <LangSelector \n                    language={props.language} \n                    changeLanguage={props.changeLanguage}\n                />\n                <div style={{position: \"relative\"}}>\n                <button \n                    className=\"header-add-event-button\" \n                    onClick={handleShowAddEvent}>\n                    + {t(\"Add Event\")}\n                </button>\n                {showMustLogin ? <div className=\"add-event-dropdown-alert\">\n                                    <FontAwesomeIcon icon={faInfoCircle} size=\"1x\"/>\n                                    <p>{t(\"Login Required!\")}</p>\n                                 </div> : null}\n                </div>\n                <div className=\"header-user-container\">\n                    {loginButton}\n                    {profileNotification}\n                    {profileButton}\n                    {userProfile}\n                </div>                \n            </div>\n\n            {showMobileMenu ? <MobileMenu \n                                handleHideMobileMenu={handleHideMobileMenu}\n                                showMustLogin={showMustLogin}\n                                handleShowAddEvent={handleShowAddEvent}\n                                language={props.language} \n                                changeLanguage={props.changeLanguage}\n                              /> : null}\n            \n            {showAddEvent ? <AddEventModal \n                             handleHideAddEvent={handleHideAddEvent}\n                             userData={props.userData}\n                             /> : null}\n\n            {showLogin ? <LoginModal \n                         handleHideLogin={handleHideLogin} \n                         setIsLoggedIn={props.setIsLoggedIn} \n                         isLoggedIn={props.isLoggedIn}\n                         setUserData={props.setUserData}\n                         /> : null}\n            \n        </div>\n    )\n}\n\nexport default Header;\n\n\n/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */\n"]},"metadata":{},"sourceType":"module"}