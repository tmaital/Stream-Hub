{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./lang-selector.css\";\n\nfunction LangSelector(props) {\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (props.language === \"en\") {\n      setCurrentLanguage(\"English\");\n    } else if (props.language === \"he\") {\n      setCurrentLanguage(\"Hebrew\");\n    }\n  });\n  useEffect(() => {\n    if (showMenu) {\n      document.addEventListener('click', handleCloseMenu);\n    }\n  });\n\n  const handleShowMenu = () => {\n    setShowMenu(true);\n  };\n\n  const handleCloseMenu = () => {\n    setShowMenu(false);\n    document.removeEventListener('click', handleCloseMenu);\n  };\n\n  const handleLangChange = lang => {\n    props.changeLanguage(lang);\n    setShowMenu(false);\n    document.removeEventListener('click', handleCloseMenu);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lang-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"lang-dropdown-button\",\n    onClick: handleShowMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, currentLanguage), showMenu ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lang-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"lang-dropdown-menu-button\",\n    onClick: () => handleLangChange(t(\"lang\") === \"en\" ? \"he\" : \"en\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, t(\"lang\") === \"en\" ? \"עברית\" : \"Egnlish\")) : null));\n}\n\nexport default LangSelector;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js"],"names":["React","useState","useEffect","LangSelector","props","showMenu","setShowMenu","currentLanguage","setCurrentLanguage","t","useTranslation","language","document","addEventListener","handleCloseMenu","handleShowMenu","removeEventListener","handleLangChange","lang","changeLanguage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAQC,cAAc,EAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGE,KAAK,CAACO,QAAN,KAAmB,IAAtB,EAA2B;AACvBH,MAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACH,KAFD,MAEO,IAAGJ,KAAK,CAACO,QAAN,KAAmB,IAAtB,EAA2B;AAC9BH,MAAAA,kBAAkB,CAAC,QAAD,CAAlB;AACH;AACJ,GANQ,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,QAAH,EAAY;AACRO,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,eAAnC;AACH;AACJ,GAJQ,CAAT;;AAMA,QAAMC,cAAc,GAAG,MAAM;AACzBT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMQ,eAAe,GAAG,MAAM;AAC1BR,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsCF,eAAtC;AACH,GAHD;;AAKA,QAAMG,gBAAgB,GAAIC,IAAD,IAAU;AAC/Bd,IAAAA,KAAK,CAACe,cAAN,CAAqBD,IAArB;AACAZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsCF,eAAtC;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,sBAFV;AAGA,IAAA,OAAO,EAAEC,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKR,eAJL,CADJ,EAOKF,QAAQ,gBACT;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,2BAFV;AAGA,IAAA,OAAO,EAAE,MAAMY,gBAAgB,CAACR,CAAC,CAAC,MAAD,CAAD,KAAc,IAAd,GAAqB,IAArB,GAA4B,IAA7B,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICA,CAAC,CAAC,MAAD,CAAD,KAAc,IAAd,GAAqB,OAArB,GAA+B,SAJhC,CADJ,CADS,GAeA,IAtBb,CADJ,CADJ;AA4BH;;AAED,eAAeN,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./lang-selector.css\"\n\nfunction LangSelector(props){\n\n    const [showMenu, setShowMenu] = useState(false)\n    const [currentLanguage, setCurrentLanguage] = useState(false)\n\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        if(props.language === \"en\"){\n            setCurrentLanguage(\"English\")\n        } else if(props.language === \"he\"){\n            setCurrentLanguage(\"Hebrew\")\n        }\n    })\n\n    useEffect(() => {\n        if(showMenu){\n            document.addEventListener('click', handleCloseMenu)\n        }\n    })\n\n    const handleShowMenu = () => {\n        setShowMenu(true)\n    }\n\n    const handleCloseMenu = () => {\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    const handleLangChange = (lang) => {\n        props.changeLanguage(lang)\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    return(\n        <div className=\"lang-dropdown\">\n            <div>\n                <button\n                type=\"button\" \n                className=\"lang-dropdown-button\" \n                onClick={handleShowMenu}>\n                    {currentLanguage}\n                </button>\n                {showMenu ? \n                <div className=\"lang-dropdown-menu\">\n                    <button \n                    type=\"button\" \n                    className=\"lang-dropdown-menu-button\" \n                    onClick={() => handleLangChange(t(\"lang\") === \"en\" ? \"he\" : \"en\")}>\n                    {t(\"lang\") === \"en\" ? \"עברית\" : \"Egnlish\"}\n                    </button>\n{/* \n                    {currentLanguage === \"Hebrew\" ? \n                    <button type=\"button\" className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"en\")}>English</button> \n                    : null}\n                    {currentLanguage === \"English\" ? \n                    <button type=\"button\" className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"he\")}>עברית</button> \n                    : null} */}\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default LangSelector"]},"metadata":{},"sourceType":"module"}