{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js\";\n// Deps\nimport React, { useState, useEffect } from 'react';\nimport { debounce } from \"lodash\";\nimport moment from \"moment\";\nimport { useTranslation } from 'react-i18next';\nimport ReactGA from 'react-ga';\nimport * as firebase from \"firebase/app\"; // Components\n\nimport './app.css';\nimport Header from \"./Header\";\nimport DaysPanel from \"./DaysPanel\";\nimport CategoryPanel from \"./CategoryPanel\";\nimport FeedPanel from './FeedPanel';\nimport Loading from \"./Loading\";\n\nfunction App() {\n  // Google Analytics\n  ReactGA.initialize('UA-162926417-1');\n  ReactGA.pageview(\"/app\"); // Translation\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    i18n.changeLanguage(lang);\n  };\n\n  const [feedItems, setFeedItems] = useState(null);\n  const [autoComleteFeed, setAutoComleteFeed] = useState([]);\n  const [daySelected, setDaySelected] = useState(\"all\"); //useState(moment().format('YYYY-MM-DD'))\n\n  const [catSelected, setCatSelected] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [language, setLanguage] = useState(\"en\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    savedItems: \"\",\n    email: \"\",\n    userId: \"\"\n  });\n  useEffect(() => {\n    const savedListArr = userData.savedItems.split(\",\");\n    feedItems && savedListArr.map(itemID => {\n      const itemNotFound = feedItems.find(item => item.itemID === parseInt(itemID));\n\n      if (!itemNotFound) {\n        const tempArr = [...savedListArr];\n        const toDelete = tempArr.indexOf(itemID);\n        tempArr.savedListArr.splice(0, 1);\n        const newList = tempArr.join(','); // setUserData(prevState => ({...prevState, savedItems: unSavedList}))\n        // firebase.auth().currentUser.updateProfile({photoURL: unSavedList})\n        // console.log(\"unSavedList\",unSavedList)\n\n        console.log(\"toDelete\", toDelete);\n        console.log(\"ItemToDelete:\", itemID);\n        console.log(\"tempArr:\", tempArr);\n        console.log(\"NewList:\", newList);\n      }\n    }); // console.log(\"unSavedList:\",unSavedList)\n    // console.log(\"feedItems:\",feedItems)\n\n    console.log(\"savedListArr\", savedListArr.length);\n  }, [feedItems]);\n  useEffect(() => {\n    const authListener = firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setIsLoggedIn(true);\n\n        if (user.photoURL && user.photoURL.includes(\"https://\")) {\n          setUserData(prevState => ({ ...prevState,\n            displayName: user.displayName,\n            savedItems: \"\",\n            email: user.email,\n            userId: user.uid\n          }));\n        } else {\n          setUserData(prevState => ({ ...prevState,\n            displayName: user.displayName,\n            savedItems: user.photoURL,\n            email: user.email,\n            userId: user.uid\n          }));\n        }\n      } else {\n        setIsLoggedIn(false);\n        console.log(\"No User:\", user);\n      }\n    });\n    return authListener;\n  }, []);\n  window.baseUrl = \"https://stream-hub.net/api/\"; // window.baseUrl=\"https://localhost:44339/api\";\n\n  window.allowPostWithoutLogin = true;\n\n  const fetchItems = async () => {\n    const apiCall = await fetch(`${window.baseUrl}items/`);\n    const items = await apiCall.json();\n    setAutoComleteFeed(items);\n    setFeedItems(items);\n    setIsLoading(false);\n    setLanguage(i18n.language);\n  };\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSearchFilter(searchTerm);\n    }, 800);\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n  if (isLoading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    style: language === \"he\" ? {\n      direction: \"rtl\"\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    autoComleteFeed: autoComleteFeed,\n    language: language,\n    changeLanguage: changeLanguage,\n    setSearchTerm: setSearchTerm,\n    searchTerm: searchTerm,\n    setIsLoggedIn: setIsLoggedIn,\n    isLoggedIn: isLoggedIn,\n    setUserData: setUserData,\n    userData: userData,\n    feedItems: feedItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-categories-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CategoryPanel, {\n    cat: setCatSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-days-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DaysPanel, {\n    dayChange: setDaySelected,\n    day: setDaySelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-feed-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeedPanel, {\n    feed: feedItems,\n    dayFilter: daySelected,\n    catFilter: catSelected,\n    searchFilter: searchFilter,\n    isLoggedIn: isLoggedIn,\n    setUserData: setUserData,\n    userData: userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js"],"names":["React","useState","useEffect","debounce","moment","useTranslation","ReactGA","firebase","Header","DaysPanel","CategoryPanel","FeedPanel","Loading","App","initialize","pageview","t","i18n","changeLanguage","lang","setLanguage","feedItems","setFeedItems","autoComleteFeed","setAutoComleteFeed","daySelected","setDaySelected","catSelected","setCatSelected","isLoading","setIsLoading","language","searchTerm","setSearchTerm","searchFilter","setSearchFilter","isLoggedIn","setIsLoggedIn","userData","setUserData","displayName","savedItems","email","userId","savedListArr","split","map","itemID","itemNotFound","find","item","parseInt","tempArr","toDelete","indexOf","splice","newList","join","console","log","length","authListener","auth","onAuthStateChanged","user","photoURL","includes","prevState","uid","window","baseUrl","allowPostWithoutLogin","fetchItems","apiCall","fetch","items","json","timer","setTimeout","clearTimeout","direction"],"mappings":"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","sourcesContent":["// Deps\nimport React,{ useState, useEffect } from 'react'\nimport { debounce } from \"lodash\";\nimport moment from \"moment\"\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport * as firebase from \"firebase/app\";\n\n\n// Components\nimport './app.css'\nimport Header from \"./Header\"\nimport DaysPanel from \"./DaysPanel\"\nimport CategoryPanel from \"./CategoryPanel\"\nimport FeedPanel from './FeedPanel'\nimport Loading from \"./Loading\"\n\nfunction App() {\n\n  // Google Analytics\n  ReactGA.initialize('UA-162926417-1')\n  ReactGA.pageview(\"/app\")\n\n  // Translation\n  const { t, i18n } = useTranslation()\n\n  const changeLanguage = lang => {\n    setLanguage(lang)\n    i18n.changeLanguage(lang)\n  }\n  \n  const [feedItems, setFeedItems] = useState(null)\n  const [autoComleteFeed,setAutoComleteFeed]= useState([])\n  const [daySelected, setDaySelected] = useState(\"all\") //useState(moment().format('YYYY-MM-DD'))\n  const [catSelected, setCatSelected] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [language, setLanguage] = useState(\"en\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [searchFilter, setSearchFilter] = useState(\"\")\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    savedItems: \"\",\n    email: \"\",\n    userId: \"\",\n  })\n\n\n  useEffect(() => {\n    const savedListArr = userData.savedItems.split(\",\")\n    feedItems && savedListArr.map(itemID => {\n      const itemNotFound = feedItems.find(item => item.itemID === parseInt(itemID))\n      if(!itemNotFound){\n        const tempArr = [...savedListArr]\n        const toDelete = tempArr.indexOf(itemID)\n        tempArr.savedListArr.splice(0, 1)\n        const newList = tempArr.join(',')\n        // setUserData(prevState => ({...prevState, savedItems: unSavedList}))\n        // firebase.auth().currentUser.updateProfile({photoURL: unSavedList})\n        // console.log(\"unSavedList\",unSavedList)\n        console.log(\"toDelete\",toDelete)\n        console.log(\"ItemToDelete:\",itemID)\n        console.log(\"tempArr:\",tempArr)\n        console.log(\"NewList:\",newList)\n      }\n\n    })\n    // console.log(\"unSavedList:\",unSavedList)\n    // console.log(\"feedItems:\",feedItems)\n    console.log(\"savedListArr\",savedListArr.length)\n  }, [feedItems])\n\n\n  useEffect(() => {\n    const authListener = firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        setIsLoggedIn(true)\n        if (user.photoURL && user.photoURL.includes(\"https://\")){\n          setUserData(prevState => ({\n            ...prevState, \n            displayName: user.displayName,\n            savedItems: \"\",\n            email: user.email,\n            userId: user.uid,\n          }))\n        } else {\n\n          setUserData(prevState => ({\n            ...prevState, \n            displayName: user.displayName,\n            savedItems: user.photoURL,\n            email: user.email,\n            userId: user.uid,\n          }))\n        }\n      } else {\n        setIsLoggedIn(false)\n        console.log(\"No User:\",user)\n      }\n    })\n    return authListener\n  }, [])\n\n  window.baseUrl=\"https://stream-hub.net/api/\";\n // window.baseUrl=\"https://localhost:44339/api\";\n  window.allowPostWithoutLogin=true;\n  const fetchItems = async () => {\n    const apiCall = await fetch(`${ window.baseUrl}items/`);\n    const items = await apiCall.json()\n    setAutoComleteFeed(items)\n    setFeedItems(items)\n    setIsLoading(false)\n    setLanguage(i18n.language)\n  }\n  \n  useEffect(() => {\n    fetchItems()\n  },[])\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSearchFilter(searchTerm);\n    }, 800);\n\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  if (isLoading) return (<Loading />)\n  return (\n\n    <div className=\"app\" style={language === \"he\" ? {direction: \"rtl\"} : null}>\n      \n      <div className=\"app-header-container\">\n        <Header \n        autoComleteFeed={autoComleteFeed} \n        language={language} \n        changeLanguage={changeLanguage} \n        setSearchTerm={setSearchTerm}\n        searchTerm={searchTerm}\n        setIsLoggedIn={setIsLoggedIn}\n        isLoggedIn={isLoggedIn}\n        setUserData={setUserData}\n        userData={userData}\n        feedItems={feedItems}\n        />\n      </div>\n      <div className=\"app-categories-container\">\n        <CategoryPanel \n        cat={setCatSelected}\n        />\n      </div>\n      <div className=\"app-days-container\">\n        <DaysPanel \n        dayChange={setDaySelected} \n        day={setDaySelected}\n        />\n      </div>\n      <div className=\"app-feed-container\">\n        <FeedPanel \n        feed={feedItems} \n        dayFilter={daySelected} \n        catFilter={catSelected} \n        searchFilter={searchFilter}\n        isLoggedIn={isLoggedIn}\n        setUserData={setUserData}\n        userData={userData}\n        />\n      </div>\n    </div>\n\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}