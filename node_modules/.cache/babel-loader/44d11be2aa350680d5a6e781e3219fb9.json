{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/add-feed-item.js\";\nimport 'date-fns';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './add-feed-item.css';\nimport { getSocialUser, setSocialUse } from '../Services/localStorageService';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TimePicker from 'react-time-picker';\nimport InputMask from 'react-input-mask';\nimport MaterialInput from '@material-ui/core/Input';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nfunction AddFeedItem({\n  openLoginDialog,\n  openAddFeedDialog,\n  handleAddFeedClose\n}) {\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [selectedTime, handleTimeChange] = useState(new Date());\n  const [duration, setDuration] = useState(new Date());\n\n  const handleFeedDialogClose = () => {\n    handleAddFeedClose(false);\n  };\n\n  const addItem = data => {\n    data.platformID = 1;\n    data.itemStartDateObj = selectedDate;\n    fetch(`${window.baseUrl}items/`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(() => {\n      console.log('response');\n      handleFeedDialogClose();\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n\n    if (!getSocialUser()) {\n      openLoginDialog();\n    } else {\n      addItem(data);\n    }\n\n    console.log(data); //addItem(data);  /// TODO: remove this line after completing login flow!!!!!\n  }; // your form submit function which will invoke after successful validation\n\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => {\n      console.log('onclose');\n      handleFeedDialogClose();\n    },\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: openAddFeedDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      backgroundColor: \"whitesmoke\",\n      padding: 20,\n      cursor: \"pointer\"\n    },\n    onClick: () => handleFeedDialogClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AddFeedItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formFlex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Titley\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemTitle\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemURL\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemDescription\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemTags\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: selectedDate,\n    onChange: handleDateChange,\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Duration\"), /*#__PURE__*/React.createElement(InputMask, {\n    name: \"duration\",\n    mask: \"99:99:99\",\n    defaultValue: \"01:00:00\",\n    maskChar: \" \",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemOwner\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Platform\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"platformID\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"ImgURL\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"itemImgURL\",\n    defaultValue: \"\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 36\n    }\n  }, \"This field is required\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default AddFeedItem;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/add-feed-item.js"],"names":["React","useState","useForm","getSocialUser","setSocialUse","DatePicker","TimePicker","InputMask","MaterialInput","DialogTitle","Dialog","AddFeedItem","openLoginDialog","openAddFeedDialog","handleAddFeedClose","selectedDate","handleDateChange","Date","selectedTime","handleTimeChange","duration","setDuration","handleFeedDialogClose","addItem","data","platformID","itemStartDateObj","fetch","window","baseUrl","headers","method","body","JSON","stringify","then","response","json","console","log","register","handleSubmit","watch","errors","onSubmit","textAlign","backgroundColor","padding","cursor","marginLeft","exampleRequired"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React,{useState} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './add-feed-item.css';\nimport {getSocialUser,setSocialUse} from '../Services/localStorageService';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TimePicker from 'react-time-picker';\nimport InputMask from 'react-input-mask';\nimport MaterialInput from '@material-ui/core/Input';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nfunction AddFeedItem({openLoginDialog,openAddFeedDialog,handleAddFeedClose}) {\n\n  \n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [selectedTime, handleTimeChange] = useState(new Date());\n  const [duration, setDuration] = useState(new Date());\n  \n  const handleFeedDialogClose=()=>\n  {\n    handleAddFeedClose(false);\n  }\n const addItem=(data)=>\n  {\n    data.platformID=1;\n    data.itemStartDateObj =selectedDate;\n    fetch(`${window.baseUrl}items/`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(()=>{console.log('response')\n    handleFeedDialogClose();\n  });\n  }\n    const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n    if (!getSocialUser())\n    {\n        openLoginDialog();\n    }\n    else\n    {\n      addItem(data);\n    }\n    console.log(data);\n  \n    //addItem(data);  /// TODO: remove this line after completing login flow!!!!!\n  }; // your form submit function which will invoke after successful validation\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n\n    return (\n      <Dialog onClose={()=>{console.log('onclose'); handleFeedDialogClose();}} aria-labelledby=\"simple-dialog-title\" open={openAddFeedDialog}>\n      <div style={{textAlign:\"right\",backgroundColor:\"whitesmoke\",padding:20,cursor:\"pointer\"}} onClick={()=>handleFeedDialogClose()}>X</div>\n      {/*<DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>*/}\n    <div className=\"AddFeedItem\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"formFlex\">\n        <div>\n        <label>Titley</label>\n        <input name=\"itemTitle\" defaultValue=\"\" ref={register} />\n        <label>URL</label>\n        <input name=\"itemURL\" defaultValue=\"\" ref={register} />\n        <label>Description</label>\n        <input name=\"itemDescription\" defaultValue=\"\" ref={register} />\n        <label>Tags</label>\n        <input name=\"itemTags\" defaultValue=\"\" ref={register} />\n        <label>Start Time</label>\n        <DatePicker\n        selected={selectedDate}\n        onChange={handleDateChange}\n        ref={register} \n      />\n        {/*<label>StartDate</label>\n        <input name=\"ItemStartDate\" defaultValue=\"\" ref={register} />*/}\n        </div>\n     \n        <div style={{marginLeft:30}}>\n        <label>Duration</label>\n        <InputMask name=\"duration\" mask=\"99:99:99\" defaultValue=\"01:00:00\" maskChar=\" \" ref={register} />\n        <label>Owner</label>\n        <input name=\"itemOwner\" defaultValue=\"\" ref={register} />\n        <label>Platform</label>\n        <input name=\"platformID\" defaultValue=\"\" ref={register} />\n        <label>ImgURL</label>\n        <input name=\"itemImgURL\" defaultValue=\"\" ref={register} />\n        \n      {/*<input\n          name=\"exampleRequired\"\n          ref={register({ required: true, maxLength: 10 })}\n        />*/\n      }\n        {errors.exampleRequired && <p>This field is required</p>}\n       \n        </div>\n        </div>\n        <input type=\"submit\" />\n      </form>\n    </div>\n    </Dialog>\n    );\n}\n\nexport default AddFeedItem;"]},"metadata":{},"sourceType":"module"}