{"ast":null,"code":"import _slicedToArray from\"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./lang-selector.css\";function LangSelector(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMenu=_useState2[0],setShowMenu=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),currentLanguage=_useState4[0],setCurrentLanguage=_useState4[1];useEffect(function(){if(props.language===\"en\"){setCurrentLanguage(\"English\");}else if(props.language===\"he\"){setCurrentLanguage(\"Hebrew\");}});useEffect(function(){if(showMenu){document.addEventListener('click',handleCloseMenu);}});var handleShowMenu=function handleShowMenu(){setShowMenu(true);};var handleCloseMenu=function handleCloseMenu(){setShowMenu(false);document.removeEventListener('click',handleCloseMenu);};var handleLangChange=function handleLangChange(lang){props.changeLanguage(lang);setShowMenu(false);document.removeEventListener('click',handleCloseMenu);};return/*#__PURE__*/React.createElement(\"div\",{className:\"lang-dropdown\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"lang-dropdown-button\",onClick:handleShowMenu},currentLanguage),showMenu?/*#__PURE__*/React.createElement(\"div\",{className:\"lang-dropdown-menu\"},currentLanguage===\"Hebrew\"?/*#__PURE__*/React.createElement(\"button\",{className:\"lang-dropdown-menu-button\",onClick:function onClick(){return handleLangChange(\"en\");}},\"English\"):null,currentLanguage===\"English\"?/*#__PURE__*/React.createElement(\"button\",{className:\"lang-dropdown-menu-button\",onClick:function onClick(){return handleLangChange(\"he\");}},\"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"):null):null));}export default LangSelector;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js"],"names":["React","useState","useEffect","LangSelector","props","showMenu","setShowMenu","currentLanguage","setCurrentLanguage","language","document","addEventListener","handleCloseMenu","handleShowMenu","removeEventListener","handleLangChange","lang","changeLanguage"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,qBAAP,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA4B,eAEQH,QAAQ,CAAC,KAAD,CAFhB,wCAEjBI,QAFiB,eAEPC,WAFO,8BAGsBL,QAAQ,CAAC,KAAD,CAH9B,yCAGjBM,eAHiB,eAGAC,kBAHA,eAKxBN,SAAS,CAAC,UAAM,CACZ,GAAGE,KAAK,CAACK,QAAN,GAAmB,IAAtB,CAA2B,CACvBD,kBAAkB,CAAC,SAAD,CAAlB,CACH,CAFD,IAEO,IAAGJ,KAAK,CAACK,QAAN,GAAmB,IAAtB,CAA2B,CAC9BD,kBAAkB,CAAC,QAAD,CAAlB,CACH,CACJ,CANQ,CAAT,CAQAN,SAAS,CAAC,UAAM,CACZ,GAAGG,QAAH,CAAY,CACRK,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCC,eAAnC,EACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBP,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BN,WAAW,CAAC,KAAD,CAAX,CACAI,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,CAAsCF,eAAtC,EACH,CAHD,CAKA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAU,CAC/BZ,KAAK,CAACa,cAAN,CAAqBD,IAArB,EACAV,WAAW,CAAC,KAAD,CAAX,CACAI,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,CAAsCF,eAAtC,EACH,CAJD,CAMA,mBACI,2BAAK,SAAS,CAAC,eAAf,eACI,4CACI,8BACA,SAAS,CAAC,sBADV,CAEA,OAAO,CAAEC,cAFT,EAGKN,eAHL,CADJ,CAMKF,QAAQ,cACT,2BAAK,SAAS,CAAC,oBAAf,EACKE,eAAe,GAAK,QAApB,cACD,8BAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAMQ,CAAAA,gBAAgB,CAAC,IAAD,CAAtB,EAAvD,YADC,CAEC,IAHN,CAIKR,eAAe,GAAK,SAApB,cACD,8BAAQ,SAAS,CAAC,2BAAlB,CAA8C,OAAO,CAAE,yBAAMQ,CAAAA,gBAAgB,CAAC,IAAD,CAAtB,EAAvD,mCADC,CAEC,IANN,CADS,CAQA,IAdb,CADJ,CADJ,CAoBH,CAED,cAAeZ,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./lang-selector.css\"\n\nfunction LangSelector(props){\n\n    const [showMenu, setShowMenu] = useState(false)\n    const [currentLanguage, setCurrentLanguage] = useState(false)\n\n    useEffect(() => {\n        if(props.language === \"en\"){\n            setCurrentLanguage(\"English\")\n        } else if(props.language === \"he\"){\n            setCurrentLanguage(\"Hebrew\")\n        }\n    })\n\n    useEffect(() => {\n        if(showMenu){\n            document.addEventListener('click', handleCloseMenu)\n        }\n    })\n\n    const handleShowMenu = () => {\n        setShowMenu(true)\n    }\n\n    const handleCloseMenu = () => {\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    const handleLangChange = (lang) => {\n        props.changeLanguage(lang)\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    return(\n        <div className=\"lang-dropdown\">\n            <div>\n                <button \n                className=\"lang-dropdown-button\" \n                onClick={handleShowMenu}>\n                    {currentLanguage}\n                </button>\n                {showMenu ? \n                <div className=\"lang-dropdown-menu\">\n                    {currentLanguage === \"Hebrew\" ? \n                    <button className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"en\")}>English</button> \n                    : null}\n                    {currentLanguage === \"English\" ? \n                    <button className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"he\")}>עברית</button> \n                    : null}\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default LangSelector"]},"metadata":{},"sourceType":"module"}