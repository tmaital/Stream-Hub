{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/CategoryPanel.js\";\nimport React, { Component } from \"react\";\nimport { withTranslation } from 'react-i18next';\nimport \"./category-panel.css\";\nimport CategoryButton from \"./CategoryButton\";\n\nclass CategoryPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCategory: null,\n      kidsLine: null,\n      lecturesLine: null,\n      fitnessLine: null,\n      funLine: null,\n      otherLine: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleClick(name) {\n    console.log(\"cat Name:\", name);\n\n    if (name === this.state.selectedCategory) {\n      this.setState({\n        kidsLine: null,\n        lecturesLine: null,\n        fitnessLine: null,\n        funLine: null,\n        otherLine: null\n      });\n      this.setState({\n        selectedCategory: null\n      });\n      this.props.cat(null);\n    } else {\n      this.setState({\n        selectedCategory: name\n      });\n\n      if (name === 1) {\n        this.setState({\n          kidsLine: 1,\n          lecturesLine: null,\n          fitnessLine: null,\n          funLine: null,\n          otherLine: null\n        });\n        this.props.cat(\"kids\");\n      } else if (name === 2) {\n        this.setState({\n          kidsLine: null,\n          lecturesLine: 1,\n          fitnessLine: null,\n          funLine: null,\n          otherLine: null\n        });\n        this.props.cat(\"lectures\");\n      } else if (name === 3) {\n        this.setState({\n          kidsLine: null,\n          lecturesLine: null,\n          fitnessLine: 1,\n          funLine: null,\n          otherLine: null\n        });\n        this.props.cat(\"fitness\");\n      } else if (name === 4) {\n        this.setState({\n          kidsLine: null,\n          lecturesLine: null,\n          fitnessLine: null,\n          funLine: 1,\n          otherLine: null\n        });\n        this.props.cat(\"fun\");\n      } else if (name === 0) {\n        this.setState({\n          kidsLine: null,\n          lecturesLine: null,\n          fitnessLine: null,\n          funLine: null,\n          otherLine: 1\n        });\n        this.props.cat(\"other\");\n      }\n    }\n  }\n\n  handleClear() {\n    this.setState({\n      selectedCategory: null,\n      kidsLine: null,\n      lecturesLine: null,\n      fitnessLine: null,\n      funLine: null,\n      otherLine: null\n    });\n    this.props.cat(null);\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const categoryTypes = [{\n      id: 0,\n      type: \"All\"\n    }, {\n      id: 1,\n      type: \"Kids\"\n    }, {\n      id: 2,\n      type: \"Lectures\"\n    }, {\n      id: 3,\n      type: \"Fitness\"\n    }, {\n      id: 4,\n      type: \"Fun\"\n    }, {\n      id: 5,\n      type: \"Other\"\n    }];\n    const categoryButtons = categoryTypes.map(type => /*#__PURE__*/React.createElement(CategoryButton, {\n      key: type.id,\n      name: type.id,\n      category: type.type,\n      color: type.color,\n      selected: this.state.selectedCategory,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-panel-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, categoryButtons));\n  }\n\n}\n\nexport default withTranslation()(CategoryPanel);","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/CategoryPanel.js"],"names":["React","Component","withTranslation","CategoryButton","CategoryPanel","constructor","props","state","selectedCategory","kidsLine","lecturesLine","fitnessLine","funLine","otherLine","handleClick","bind","handleClear","name","console","log","setState","cat","render","t","categoryTypes","id","type","categoryButtons","map","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport { withTranslation } from 'react-i18next';\n\nimport \"./category-panel.css\"\nimport CategoryButton from \"./CategoryButton\"\n\nclass CategoryPanel extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            selectedCategory: null,\n            kidsLine: null,\n            lecturesLine: null,\n            fitnessLine: null,\n            funLine: null,\n            otherLine: null,\n        }   \n        this.handleClick = this.handleClick.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n    }\n    handleClick(name){\n        console.log(\"cat Name:\",name)\n        if (name === this.state.selectedCategory){\n            this.setState({kidsLine: null, lecturesLine: null, fitnessLine: null, funLine: null, otherLine: null})\n            this.setState({selectedCategory: null})\n            this.props.cat(null)\n        } else {\n                this.setState({selectedCategory: name})\n            if (name === 1) {this.setState({kidsLine: 1, lecturesLine: null, fitnessLine: null, funLine: null, otherLine: null})\n                this.props.cat(\"kids\")} else\n            if (name === 2) {this.setState({kidsLine: null, lecturesLine: 1, fitnessLine: null, funLine: null, otherLine: null})\n                this.props.cat(\"lectures\")} else\n            if (name === 3) {this.setState({kidsLine: null, lecturesLine: null, fitnessLine: 1, funLine: null, otherLine: null})\n                this.props.cat(\"fitness\")} else\n            if (name === 4) {this.setState({kidsLine: null, lecturesLine: null, fitnessLine: null, funLine: 1, otherLine: null})\n                this.props.cat(\"fun\")} else\n            if (name === 0) {this.setState({kidsLine: null, lecturesLine: null, fitnessLine: null, funLine: null, otherLine: 1})\n                this.props.cat(\"other\")}\n        }\n    }\n        \n    \n\n    handleClear(){\n        this.setState({\n            selectedCategory: null,\n            kidsLine: null,\n            lecturesLine: null,\n            fitnessLine: null,\n            funLine: null,\n            otherLine: null\n        })\n        this.props.cat(null)\n    }\n\n    render(){\n\n        const { t } = this.props\n        \n        const categoryTypes = [\n            {id: 0, type: \"All\"},\n            {id: 1, type: \"Kids\"}, \n            {id: 2, type: \"Lectures\"}, \n            {id: 3, type: \"Fitness\"}, \n            {id: 4, type: \"Fun\"},\n            {id: 5, type: \"Other\"},\n\n        ]\n\n        const categoryButtons = categoryTypes.map(type => \n            <CategoryButton \n            key={type.id} \n            name={type.id} \n            category={type.type} \n            color={type.color}\n            selected={this.state.selectedCategory}\n            handleClick={this.handleClick}/>\n        )\n                                    \n        return(\n            <div className=\"category-panel-flex\">\n                <div className=\"category-panel\">\n                    {categoryButtons}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(CategoryPanel)"]},"metadata":{},"sourceType":"module"}