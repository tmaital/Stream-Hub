{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js\";\n// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './header.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons'; // Components\n\nimport LangSelector from \"./LangSelector\";\nimport streamHubLogo from \"../StreamHub_Logo.png\";\nimport Search from \"./Search\";\nimport AddEventModal from \"./AddEventModal\";\nimport LoginModal from \"./LoginModal\";\n\nfunction Header(props) {\n  const [showAddEvent, setShowAddEvent] = useState(false);\n  const [showMustLogin, setShowMustLogin] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const handleLogoClick = () => {\n    window.location.reload();\n  };\n\n  const handleShowAddEvent = () => {\n    if (props.isLoggedIn) {\n      setShowAddEvent(true);\n    } else {\n      setShowMustLogin(true);\n      setTimeout(() => {\n        setShowMustLogin(false);\n      }, 2000);\n    }\n  };\n\n  const handleHideAddEvent = () => {\n    setShowAddEvent(false);\n  };\n\n  const handleShowLogin = () => {\n    setShowLogin(true);\n  };\n\n  const handleHideLogin = () => {\n    setShowLogin(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"header-logo\",\n    src: streamHubLogo,\n    alt: \"StreamHub Logo\",\n    onClick: handleLogoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    setSearchFilter: props.setSearchFilter,\n    searchFilter: props.searchFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LangSelector, {\n    language: props.language,\n    changeLanguage: props.changeLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-add-event-button\",\n    onClick: handleShowAddEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"+ \", t(\"Add Event\")), showMustLogin ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-event-dropdown-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 34\n    }\n  }, \"Please Login First.\") : null), !props.isLoggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-login-button\",\n    onClick: handleShowLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  }, t(\"Login\")) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"header-profile-button\",\n    onClick: () => console.log(\"user profile clicked!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))), showAddEvent ? /*#__PURE__*/React.createElement(AddEventModal, {\n    handleHideAddEvent: handleHideAddEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }) : null, showLogin ? /*#__PURE__*/React.createElement(LoginModal, {\n    handleHideLogin: handleHideLogin,\n    setIsLoggedIn: props.setIsLoggedIn,\n    isLoggedIn: props.isLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 26\n    }\n  }) : null);\n}\n\nexport default Header;\n/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/Header.js"],"names":["React","useState","useEffect","useRef","createRef","useTranslation","FontAwesomeIcon","faUser","LangSelector","streamHubLogo","Search","AddEventModal","LoginModal","Header","props","showAddEvent","setShowAddEvent","showMustLogin","setShowMustLogin","showLogin","setShowLogin","t","handleLogoClick","window","location","reload","handleShowAddEvent","isLoggedIn","setTimeout","handleHideAddEvent","handleShowLogin","handleHideLogin","setSearchFilter","searchFilter","language","changeLanguage","console","log","setIsLoggedIn"],"mappings":"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","sourcesContent":["// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react'\nimport { useTranslation } from 'react-i18next' \nimport './header.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\n\n// Components\nimport LangSelector from \"./LangSelector\"\nimport streamHubLogo from \"../StreamHub_Logo.png\"\nimport Search from \"./Search\"\nimport AddEventModal from \"./AddEventModal\"\nimport LoginModal from \"./LoginModal\"\n\n\nfunction Header(props){\n\n    const [showAddEvent, setShowAddEvent] = useState(false)\n    const [showMustLogin, setShowMustLogin] = useState(false)\n    const [showLogin, setShowLogin] = useState(false)\n    \n    const { t } = useTranslation()\n\n    const handleLogoClick = () => {\n        window.location.reload()\n    }\n\n    const handleShowAddEvent = () => {\n        if(props.isLoggedIn){\n            setShowAddEvent(true)\n        } else {\n            setShowMustLogin(true)\n            setTimeout(() => {setShowMustLogin(false)\n            }, 2000)\n        }\n    }\n\n    const handleHideAddEvent = () => {\n        setShowAddEvent(false)\n    }\n\n    const handleShowLogin = () => {\n        setShowLogin(true)\n    }\n\n    const handleHideLogin = () => {\n        setShowLogin(false)\n    }\n\n    return (\n        <div className=\"header-container\">\n\n            <img \n                className=\"header-logo\" \n                src={streamHubLogo} \n                alt=\"StreamHub Logo\"  \n                onClick={handleLogoClick}\n            />\n\n            <Search \n                setSearchFilter={props.setSearchFilter}\n                searchFilter={props.searchFilter}\n            />\n            <div className=\"right-header-container\">\n                <LangSelector \n                    language={props.language} \n                    changeLanguage={props.changeLanguage}\n                />\n            <div>\n                <button \n                    className=\"header-add-event-button\" \n                    onClick={handleShowAddEvent}>\n                    + {t(\"Add Event\")}\n                </button>\n                {showMustLogin ? <div className=\"add-event-dropdown-alert\">Please Login First.</div> : null}\n            </div>\n        {!props.isLoggedIn ? <button \n                    className=\"header-login-button\"\n                    onClick={handleShowLogin}>\n                    {t(\"Login\")}\n                </button>\n\n               : <button \n                    className=\"header-profile-button\"\n                    onClick={() => console.log(\"user profile clicked!\")}>\n                    <FontAwesomeIcon icon={faUser} size=\"lg\"/>\n                </button>}\n                \n            </div>\n            \n            {showAddEvent ? <AddEventModal \n                             handleHideAddEvent={handleHideAddEvent}\n                             /> : null}\n\n            {showLogin ? <LoginModal \n                         handleHideLogin={handleHideLogin} \n                         setIsLoggedIn={props.setIsLoggedIn} \n                         isLoggedIn={props.isLoggedIn}\n                         /> : null}\n            \n        </div>\n    )\n}\n\nexport default Header;\n\n\n/* GRAVEYARD\n    // import\n    import AddFeedItem from './add-feed-item'\n    import SocialLoginDialog from './Social-login-dialog'\n    import Button from '@material-ui/core/Button'\n    import TextField from '@material-ui/core/TextField'\n    import Autocomplete from '@material-ui/lab/Autocomplete'\n    //import\n\n    // function header\n    const [isAddFeedOpen, setAddFeedOpen] = useState(false)\n    const [isLoginDialogOpen, setLoginDialogOpen] = useState(false)\n    \n    let  defaultProps = {\n        options: props.autoComleteFeed,\n        getOptionLabel: (option) => option.itemTitle,\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        //setAddFeedOpen(false);\n        //setLoginDialogOpen(false);\n    }\n \n    const doLogout = () => {\n    }\n    const onAutoCompleteChange = (event, values) => {\n        props.search()\n    }\n\n    const  openLoginDialog = () => {\n        console.log('openLoginDialog')\n        setLoginDialogOpen(true);\n    }\n\n    const childSocialLoginRef = createRef()\n\n    const handleLoginDialogClose = () => {\n        setLoginDialogOpen(false)\n        setAddFeedOpen(false)\n    }\n    // function header\n\n    // return\n        {/* <div className=\"right-header-container\">\n                    \n                    <div className=\"header-add-event\">\n                        <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setAddFeedOpen(true)}} type=\"button\">{t(\"Add Event\")}</Button>\n                    </div>\n                    {true /*!getSocialUser()* / &&\n                        <div className=\"header-login\">\n                            <Button variant=\"contained\" onClick={()=>{console.log('setAddFeedOpen');setLoginDialogOpen(true)}} type=\"button\">{t(\"Login\")}</Button>\n                        </div>\n                    }\n                    {false/*getSocialUser()* / &&\n                        <div  className=\"header-logout\">\n                            <Button style={{marginTop:30,marginLeft:\"auto\"}} variant=\"outlined\" onClick={()=>{console.log('setAddFeedOpen');  childSocialLoginRef.current.doLogout()}} type=\"button\">Logout</Button>\n                        </div>\n                    }\n                    {/* <div className=\"add-feed-item-container\">\n                        //{<Drawer ref={myRef} anchor={'right'} open={isAddFeedOpen} onClose={toggleDrawer( false)}>}\n                        <AddFeedItem openLoginDialog={openLoginDialog} openAddFeedDialog={isAddFeedOpen}  handleAddFeedClose={()=>setAddFeedOpen(false)}></AddFeedItem>\n                    </div> * /}\n                    <SocialLoginDialog  open={isLoginDialogOpen} onClose={handleLoginDialogClose}  ref={childSocialLoginRef}/> \n                </div> * /} \n    // return\n\n    */\n"]},"metadata":{},"sourceType":"module"}