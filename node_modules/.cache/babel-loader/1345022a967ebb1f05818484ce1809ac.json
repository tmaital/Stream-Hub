{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/MobileMenu.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./mobile-menu.css\";\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport LangSelector from \"./LangSelector\";\nimport streamHubLogo from \"../StreamHub_Logo.png\";\n\nfunction LoginModal(props) {\n  const [fireErrors, setFireErrors] = useState(null);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [isLoginSuccess, setIsLoginSuccess] = useState(false);\n  const {\n    t\n  } = useTranslation();\n\n  const handleClose = event => {\n    if (event.target === event.currentTarget) props.handleHideMobileMenu();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-menu\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-menu-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mobile-menu-container-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-menu-close-button\",\n    onClick: props.handleHideMobileMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-menu-container-window-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"header-logo\",\n    src: streamHubLogo,\n    alt: \"StreamHub Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(LangSelector, {\n    language: props.language,\n    changeLanguage: props.changeLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"header-add-event-button\",\n    onClick: props.handleShowAddEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, \"+ \", t(\"Add Event\")), props.showMustLogin ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-event-dropdown-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faInfoCircle,\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  }, t(\"Login Required!\"))) : null)))));\n}\n\nexport default LoginModal;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/MobileMenu.js"],"names":["React","useState","useEffect","useTranslation","FontAwesomeIcon","faTimes","faInfoCircle","LangSelector","streamHubLogo","LoginModal","props","fireErrors","setFireErrors","isLoginLoading","setIsLoginLoading","isLoginSuccess","setIsLoginSuccess","t","handleClose","event","target","currentTarget","handleHideMobileMenu","language","changeLanguage","position","handleShowAddEvent","showMustLogin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,mCAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;AAIA,QAAM;AAAEgB,IAAAA;AAAF,MAAQd,cAAc,EAA5B;;AAEA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAGA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA1B,EACAX,KAAK,CAACY,oBAAN;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEJ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,OAAO,EAAER,KAAK,CAACY,oBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjB,OAAvB;AAAgC,IAAA,IAAI,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,aADV;AAEA,IAAA,GAAG,EAAEG,aAFL;AAGA,IAAA,GAAG,EAAC,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,YAAD;AACA,IAAA,QAAQ,EAAEE,KAAK,CAACa,QADhB;AAEA,IAAA,cAAc,EAAEb,KAAK,CAACc,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAUI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,yBAFV;AAGA,IAAA,OAAO,EAAEf,KAAK,CAACgB,kBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGT,CAAC,CAAC,WAAD,CAJJ,CADJ,EAOKP,KAAK,CAACiB,aAAN,gBAAsB;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAErB,YAAvB;AAAqC,IAAA,IAAI,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,eAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIW,CAAC,CAAC,iBAAD,CAAL,CAFO,CAAtB,GAGwB,IAV7B,CAVJ,CAJJ,CADJ,CADJ,CADJ;AAmCH;;AAED,eAAeR,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./mobile-menu.css\"\nimport { useTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport LangSelector from \"./LangSelector\"\nimport streamHubLogo from \"../StreamHub_Logo.png\"\n\n\nfunction LoginModal(props){\n\n    const [fireErrors, setFireErrors] = useState(null);\n    const [isLoginLoading, setIsLoginLoading] = useState(false)\n    const [isLoginSuccess, setIsLoginSuccess] = useState(false)\n\n\n\n    const { t } = useTranslation()\n\n    const handleClose = (event) => {\n        if(event.target === event.currentTarget) \n        props.handleHideMobileMenu()\n    }\n\n    return(\n        <div className=\"mobile-menu\" onClick={handleClose}>\n            <div className=\"mobile-menu-container\">\n                <form className=\"mobile-menu-container-window\">\n                    <div className=\"mobile-menu-close-button\" onClick={props.handleHideMobileMenu}>\n                        <FontAwesomeIcon icon={faTimes} size=\"1x\"/>\n                    </div>\n                    <div className=\"mobile-menu-container-window-buttons\">\n                        <img \n                        className=\"header-logo\" \n                        src={streamHubLogo} \n                        alt=\"StreamHub Logo\"  \n                        />\n                        <LangSelector \n                        language={props.language} \n                        changeLanguage={props.changeLanguage}\n                        />\n                        <div style={{position: \"relative\"}}>\n                            <button \n                            type=\"button\"\n                            className=\"header-add-event-button\" \n                            onClick={props.handleShowAddEvent}>\n                            + {t(\"Add Event\")}\n                            </button>\n                            {props.showMustLogin ? <div className=\"add-event-dropdown-alert\">\n                                            <FontAwesomeIcon icon={faInfoCircle} size=\"1x\"/>\n                                            <p>{t(\"Login Required!\")}</p>\n                                            </div> : null}\n                        </div>\n                        \n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginModal"]},"metadata":{},"sourceType":"module"}