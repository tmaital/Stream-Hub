{"ast":null,"code":"import _slicedToArray from\"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./lang-selector.css\";import{useTranslation}from'react-i18next';function LangSelector(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMenu=_useState2[0],setShowMenu=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),currentLanguage=_useState4[0],setCurrentLanguage=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){if(props.language===\"en\"){setCurrentLanguage(\"English\");}else if(props.language===\"he\"){setCurrentLanguage(\"Hebrew\");}});useEffect(function(){if(showMenu){document.addEventListener('click',handleCloseMenu);}});var handleShowMenu=function handleShowMenu(){setShowMenu(true);};var handleCloseMenu=function handleCloseMenu(){setShowMenu(false);document.removeEventListener('click',handleCloseMenu);};var handleLangChange=function handleLangChange(lang){props.changeLanguage(lang);setShowMenu(false);document.removeEventListener('click',handleCloseMenu);};return/*#__PURE__*/React.createElement(\"div\",{className:\"lang-dropdown\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"lang-dropdown-button\",onClick:handleShowMenu},t(\"language\")),showMenu?/*#__PURE__*/React.createElement(\"div\",{className:\"lang-dropdown-menu\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"lang-dropdown-menu-button\",onClick:function onClick(){return handleLangChange(t(\"lang\")===\"en\"?\"he\":\"en\");}},t(\"lang\")===\"en\"?\"עברית\":\"English\")):null));}export default LangSelector;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/LangSelector.js"],"names":["React","useState","useEffect","useTranslation","LangSelector","props","showMenu","setShowMenu","currentLanguage","setCurrentLanguage","t","language","document","addEventListener","handleCloseMenu","handleShowMenu","removeEventListener","handleLangChange","lang","changeLanguage"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,qBAAP,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA4B,eAEQJ,QAAQ,CAAC,KAAD,CAFhB,wCAEjBK,QAFiB,eAEPC,WAFO,8BAGsBN,QAAQ,CAAC,KAAD,CAH9B,yCAGjBO,eAHiB,eAGAC,kBAHA,mCAKVN,cAAc,EALJ,CAKhBO,CALgB,iBAKhBA,CALgB,CAOxBR,SAAS,CAAC,UAAM,CACZ,GAAGG,KAAK,CAACM,QAAN,GAAmB,IAAtB,CAA2B,CACvBF,kBAAkB,CAAC,SAAD,CAAlB,CACH,CAFD,IAEO,IAAGJ,KAAK,CAACM,QAAN,GAAmB,IAAtB,CAA2B,CAC9BF,kBAAkB,CAAC,QAAD,CAAlB,CACH,CACJ,CANQ,CAAT,CAQAP,SAAS,CAAC,UAAM,CACZ,GAAGI,QAAH,CAAY,CACRM,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCC,eAAnC,EACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBR,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BP,WAAW,CAAC,KAAD,CAAX,CACAK,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,CAAsCF,eAAtC,EACH,CAHD,CAKA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAU,CAC/Bb,KAAK,CAACc,cAAN,CAAqBD,IAArB,EACAX,WAAW,CAAC,KAAD,CAAX,CACAK,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,CAAsCF,eAAtC,EACH,CAJD,CAMA,mBACI,2BAAK,SAAS,CAAC,eAAf,eACI,4CACI,8BACA,IAAI,CAAC,QADL,CAEA,SAAS,CAAC,sBAFV,CAGA,OAAO,CAAEC,cAHT,EAIKL,CAAC,CAAC,UAAD,CAJN,CADJ,CAOKJ,QAAQ,cACT,2BAAK,SAAS,CAAC,oBAAf,eACI,8BACA,IAAI,CAAC,QADL,CAEA,SAAS,CAAC,2BAFV,CAGA,OAAO,CAAE,yBAAMW,CAAAA,gBAAgB,CAACP,CAAC,CAAC,MAAD,CAAD,GAAc,IAAd,CAAqB,IAArB,CAA4B,IAA7B,CAAtB,EAHT,EAICA,CAAC,CAAC,MAAD,CAAD,GAAc,IAAd,CAAqB,OAArB,CAA+B,SAJhC,CADJ,CADS,CAeA,IAtBb,CADJ,CADJ,CA4BH,CAED,cAAeN,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport \"./lang-selector.css\"\nimport { useTranslation } from 'react-i18next'\n\nfunction LangSelector(props){\n\n    const [showMenu, setShowMenu] = useState(false)\n    const [currentLanguage, setCurrentLanguage] = useState(false)\n\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        if(props.language === \"en\"){\n            setCurrentLanguage(\"English\")\n        } else if(props.language === \"he\"){\n            setCurrentLanguage(\"Hebrew\")\n        }\n    })\n\n    useEffect(() => {\n        if(showMenu){\n            document.addEventListener('click', handleCloseMenu)\n        }\n    })\n\n    const handleShowMenu = () => {\n        setShowMenu(true)\n    }\n\n    const handleCloseMenu = () => {\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    const handleLangChange = (lang) => {\n        props.changeLanguage(lang)\n        setShowMenu(false)\n        document.removeEventListener('click', handleCloseMenu)\n    }\n\n    return(\n        <div className=\"lang-dropdown\">\n            <div>\n                <button\n                type=\"button\" \n                className=\"lang-dropdown-button\" \n                onClick={handleShowMenu}>\n                    {t(\"language\")}\n                </button>\n                {showMenu ? \n                <div className=\"lang-dropdown-menu\">\n                    <button \n                    type=\"button\" \n                    className=\"lang-dropdown-menu-button\" \n                    onClick={() => handleLangChange(t(\"lang\") === \"en\" ? \"he\" : \"en\")}>\n                    {t(\"lang\") === \"en\" ? \"עברית\" : \"English\"}\n                    </button>\n{/* \n                    {currentLanguage === \"Hebrew\" ? \n                    <button type=\"button\" className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"en\")}>English</button> \n                    : null}\n                    {currentLanguage === \"English\" ? \n                    <button type=\"button\" className=\"lang-dropdown-menu-button\" onClick={() => handleLangChange(\"he\")}>עברית</button> \n                    : null} */}\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default LangSelector"]},"metadata":{},"sourceType":"module"}