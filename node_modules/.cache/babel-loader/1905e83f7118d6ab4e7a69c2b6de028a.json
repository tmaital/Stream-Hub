{"ast":null,"code":"var _jsxFileName = \"/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js\";\n// Deps\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport moment from \"moment\";\nimport { useTranslation } from 'react-i18next'; // Components\n\nimport './app.css';\nimport Header from \"./Header\";\nimport DaysPanel from \"./DaysPanel\";\nimport CategoryPanel from \"./CategoryPanel\";\nimport FeedPanel from './FeedPanel';\nimport Loading from \"./Loading\"; // Other\n\nimport clsx from 'clsx';\nimport ReactGA from 'react-ga';\n\nfunction App() {\n  let myRef; //window.baseUrl=\"https://localhost:44339/api/\";\n\n  window.baseUrl = \"http://stream-hub.net/api/\";\n  const [feedItems, setFeedItems] = React.useState(null);\n  const [filteredFeedItems, setFilteredFeedItems] = React.useState(null);\n  const [categories, setCategories] = React.useState(null);\n  const [isFetchedData, setIsFetchedData] = React.useState(false);\n  ReactGA.initialize('UA-162926417-1');\n  ReactGA.pageview(\"/app\");\n  const [autoComleteFeed, setAutoComleteFeed] = React.useState([]);\n  const [daySelected, setDaySelected] = useState(moment().format('YYYY-MM-DD'));\n  const [catSelected, setCatSelected] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [langSelected, setLangSelected] = useState(\"en\");\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const changeLanguage = lang => {\n    i18n.changeLanguage(lang);\n  };\n\n  const fetchItems = async () => {\n    const apiCall = await fetch(`${window.baseUrl}items/`);\n    const items = await apiCall.json();\n    setAutoComleteFeed(items);\n    setFeedItems(items);\n    setFilteredFeedItems(items);\n    setIsLoading(false);\n  };\n\n  const fetchCategories = async () => {\n    const apiCall = await fetch(`${window.baseUrl}categories/`);\n\n    const _categories = await apiCall.json();\n\n    setCategories(_categories);\n  };\n\n  useEffect(() => {\n    if (!isFetchedData) {\n      setIsFetchedData(true);\n      fetchItems();\n      fetchCategories();\n    } // Update the document title using the browser API\n    //document.title = `You clicked ${count} times`;\n\n  });\n  if (isLoading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    autoComleteFeed: autoComleteFeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-categories-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CategoryPanel, {\n    categories: categories,\n    cat: setCatSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-days-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DaysPanel, {\n    dayChange: setDaySelected,\n    day: setDaySelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-feed-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeedPanel, {\n    feeds: feedItems,\n    dayFilter: daySelected,\n    catFilter: catSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/main/Documents/tvguide/livey-master/StreamHubCore2/StreamHubCore2/ClientApp/src/components/App.js"],"names":["React","useState","useEffect","useRef","createRef","moment","useTranslation","Header","DaysPanel","CategoryPanel","FeedPanel","Loading","clsx","ReactGA","App","myRef","window","baseUrl","feedItems","setFeedItems","filteredFeedItems","setFilteredFeedItems","categories","setCategories","isFetchedData","setIsFetchedData","initialize","pageview","autoComleteFeed","setAutoComleteFeed","daySelected","setDaySelected","format","catSelected","setCatSelected","isLoading","setIsLoading","langSelected","setLangSelected","t","i18n","changeLanguage","lang","fetchItems","apiCall","fetch","items","json","fetchCategories","_categories"],"mappings":"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","sourcesContent":["// Deps\nimport React,{ useState, useEffect, useRef, createRef } from 'react';\nimport moment from \"moment\"\nimport { useTranslation } from 'react-i18next';\n\n// Components\nimport './app.css';\nimport Header from \"./Header\"\nimport DaysPanel from \"./DaysPanel\"\nimport CategoryPanel from \"./CategoryPanel\"\nimport FeedPanel from './FeedPanel';\nimport Loading from \"./Loading\"\n\n// Other\nimport clsx from 'clsx';\nimport ReactGA from 'react-ga';\n\nfunction App() {\n  \n  let myRef;\n \n  //window.baseUrl=\"https://localhost:44339/api/\";\n  window.baseUrl=\"http://stream-hub.net/api/\";\n  \n  const [feedItems, setFeedItems] = React.useState(null);\n  const [filteredFeedItems, setFilteredFeedItems] = React.useState(null);\n  const [categories, setCategories] = React.useState(null);\n  const [isFetchedData,setIsFetchedData]= React.useState(false);\n  ReactGA.initialize('UA-162926417-1');\n  ReactGA.pageview(\"/app\");\n  const [autoComleteFeed,setAutoComleteFeed]= React.useState([]);\n\n\n\n  const [daySelected, setDaySelected] = useState(moment().format('YYYY-MM-DD'))\n  const [catSelected, setCatSelected] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [langSelected, setLangSelected] = useState(\"en\");\n  \n  const { t, i18n } = useTranslation()\n\n  const changeLanguage = lang => {\n    i18n.changeLanguage(lang)\n  }\n\n\n\n  const fetchItems=async ()=>\n  {\n    \n    const apiCall =await fetch(`${window.baseUrl}items/`);\n    const items=await apiCall.json();\n    setAutoComleteFeed(items);\n    setFeedItems(items);\n    setFilteredFeedItems(items)\n    setIsLoading(false)\n  }\n  \n const fetchCategories = async () =>\n {\n    const apiCall = await fetch(`${window.baseUrl}categories/`);\n    const _categories = await apiCall.json();\n    \n    setCategories(_categories);\n  }\n\n  useEffect(() => {\n\n    if (!isFetchedData)\n    {\n      setIsFetchedData(true);\n      fetchItems();\n      fetchCategories();\n    }\n      // Update the document title using the browser API\n      //document.title = `You clicked ${count} times`;\n  });\n  \n\n  \n  \n\n  if (isLoading) return (<Loading />)\n  return (\n\n    <div className=\"app\">\n      \n      <div className=\"app-header-container\">\n        <Header autoComleteFeed={autoComleteFeed}/>\n      </div>\n      <div className=\"app-categories-container\">\n        <CategoryPanel categories={categories} cat={setCatSelected}/>\n      </div>\n      <div className=\"app-days-container\">\n        <DaysPanel dayChange={setDaySelected} day={setDaySelected}/>\n      </div>\n      <div className=\"app-feed-container\">\n        <FeedPanel  feeds={feedItems} dayFilter={daySelected} catFilter={catSelected}/>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}